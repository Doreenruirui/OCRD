{
    "type": "object",
    "properties": {
    "engine": {
        "const": "calamari",
        "default": "calamari",
        "description": "Engine name."
        },
    "model_prefix": {"$ref": "common.schema#/definitions/model_prefix"},
    "nepoch": {"$ref": "common.schema#/definitions/nepoch"},
    "partition": {"$ref": "common.schema#/definitions/partition"},
    "learning_rate": {"$ref": "common.schema#/definitions/learning_rate"},
    "savefreq": {"$ref": "common.schema#/definitions/savefreq"},
    "batch_size": {"$ref": "common.schema#/definitions/batch_size"},
    "continue_from" : {"$ref": "common.schema#/definitions/continue_from"},
    "model": {"$ref": "models/model_calamari.schema#/definitions/model"},
    "seed": {
        "type": "integer",
        "default": 0,
        "description": "Seed for random operations. If negative or zero a  'random' seed is used."
    },
    "stats_size":
    {
        "type": "integer",
        "default" :100,
        "description": "Average this many iterations for computing an average loss, label error rate and training time."
    }
    "early_stop": {
        "type": "object",
        "properties": {
            "freq" : {
                "type" : "number",
                "format" : "float",
                "default" : 0.5,
                "description" : "The frequency of early stopping. By default the checkpoint frequency uses the early stopping  frequency. By default (value = 0.5) the early stopping frequency equates to a half epoch. If 0 < value <= 1 the frequency has the unit of an epoch (relative to  number of training data)."
                },
            "nbest" : {
                "type" : "integer",
                "default" : 5,
                "description" : "Number of models to wait before stopping training without improvement."
                },
            "model_prefix" :
            {
                "type" : "string",
                "default" : "best_",
                "description" : "The prefix of the model file."
            }
        },
        "additionalProperties": false
    },
    "preload" : {
        "type": "object",
        "properties": {
            "train": {
                "type" : "boolean",
                "default" : false,
                "description" : "Whether to preload all the training set into memory for accelerating training."
                },
            "test": {
                "type" : "boolean",
                "default" : false,
                "description" : "Whether to preload all the evaluation set into memory for accelerating evaluation."
                }
        },
        "additionalProperties": false
    },

    "num_threads" : {
        "type": "object",
        "properties": {
            "all": {
                "type" : "number",
                "format" : "integer",
                "default" : 0,
                "description" : "The number of threads to use for all operations."
            },
            "inter" : {
                "type": "number",
                "format": "integer",
                "default": 0,
                "description" : "Tensorflow's session inter threads param."
                },
            "intra" : {
                "type": "number",
                "format": "integer",
                "default": 0,
                "description" : "Tensorflow's session intra threads param"
            }
        },
        "additionalProperties": false
    },
    "no_skip_invalid_gt" : {
        "type" : "boolean",
        "default" : false,
        "description" : " Do no skip invalid gt, instead raise an exception."
        },
    "gradient_clipping_mode": {
        "type": "string",
        "default": "AUTO",
        "description": "Clipping mode of gradients. Possible values are AUTO, NONE, CONSTANT.",
        "enum": ["AUTO", "NONE", "CONSTANT"]
        },
    "gradient_clipping_const":  {
        "type": "float",
        "default": 0,
        "description": "Clipping constant of gradients in CONSTANT mode."
        },
    "backend": {
        "type": "string",
        "default": "tensorflow",
        "description": "The backend to use for the neural net computation. Currently supported only tensorflow.",
        "enum": ["tensorflow"]
        },
    "bidi_dir" {
        "type": "string",
        "default": null,
        "enum": ["ltr", "rtl", "auto"],
        "description": "The default text direction when preprocessing bidirectional text. Supported values are 'auto' to  automatically detect the direction, 'ltr' and 'rtl'  for left-to-right and right-to-left, respectively."
        },
    "normalization": {
        "type": "string",
        "default": "NFC",
        "description": "Unicode text normalization to apply."
        }
    "regularization": {
        "type": "string",
        "default": "extended",
        "description": "Text regularization to apply."
        }
    },
    "additionalProperties": false
}
